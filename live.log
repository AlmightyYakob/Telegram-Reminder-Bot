[2018-03-29T03:14:14.464] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:15:15.721] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:20:24.136] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:21:30.158] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:29:36.612] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:29:40.505] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:31:26.377] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:35:00.640] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:35:17.009] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:35:53.910] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:39:32.841] [INFO] normal - Telegram app listening on port 443!
[2018-03-29T03:39:44.414] [INFO] normal - Telegram app listening on port 443!
[2018-03-30T01:26:26.033] [INFO] normal - IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   TLSSocket {
     _tlsOptions: 
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
     npnProtocol: 'http/1.1',
     alpnProtocol: false,
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events: 
      { close: [Array],
        finish: [Function: onSocketFinish],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 11,
     connecting: false,
     _hadError: false,
     _handle: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _parent: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        allowHalfOpen: false,
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 74,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0 },
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: false,
     server: 
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 77 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 49 54 43 43 41 67 6d 67 41 77 49 42 41 67 49 4a 41 4f ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '4cb3ac1befa3c1d77279b69926988da9',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::443',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 8 },
     _server: null,
     ssl: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _requestCert: false,
     _rejectUnauthorized: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 13112,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(res)]: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     [Symbol(asyncId)]: 75,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 76,
     [Symbol(triggerAsyncId)]: 8,
     [Symbol(error-emitted)]: false },
  connection: 
   TLSSocket {
     _tlsOptions: 
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
     npnProtocol: 'http/1.1',
     alpnProtocol: false,
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events: 
      { close: [Array],
        finish: [Function: onSocketFinish],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 11,
     connecting: false,
     _hadError: false,
     _handle: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _parent: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        allowHalfOpen: false,
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 74,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0 },
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: false,
     server: 
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 77 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 49 54 43 43 41 67 6d 67 41 77 49 42 41 67 49 4a 41 4f ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '4cb3ac1befa3c1d77279b69926988da9',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::443',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 8 },
     _server: null,
     ssl: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _requestCert: false,
     _rejectUnauthorized: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 13112,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(res)]: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     [Symbol(asyncId)]: 75,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 76,
     [Symbol(triggerAsyncId)]: 8,
     [Symbol(error-emitted)]: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded',
     'cache-control': 'no-cache',
     'postman-token': '5c935991-ba46-4140-9b42-0eacf22d39d1',
     'user-agent': 'PostmanRuntime/7.1.1',
     accept: '*/*',
     host: 'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
     'accept-encoding': 'gzip, deflate',
     'content-length': '351',
     connection: 'keep-alive' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded',
     'cache-control',
     'no-cache',
     'Postman-Token',
     '5c935991-ba46-4140-9b42-0eacf22d39d1',
     'User-Agent',
     'PostmanRuntime/7.1.1',
     'Accept',
     '*/*',
     'Host',
     'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
     'accept-encoding',
     'gzip, deflate',
     'content-length',
     '351',
     'Connection',
     'keep-alive' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   TLSSocket {
     _tlsOptions: 
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
     npnProtocol: 'http/1.1',
     alpnProtocol: false,
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events: 
      { close: [Array],
        finish: [Function: onSocketFinish],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 11,
     connecting: false,
     _hadError: false,
     _handle: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _parent: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        allowHalfOpen: false,
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 74,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0 },
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: false,
     server: 
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 77 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 49 54 43 43 41 67 6d 67 41 77 49 42 41 67 49 4a 41 4f ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '4cb3ac1befa3c1d77279b69926988da9',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::443',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 8 },
     _server: null,
     ssl: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _requestCert: false,
     _rejectUnauthorized: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 13112,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(res)]: 
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 13033,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     [Symbol(asyncId)]: 75,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 76,
     [Symbol(triggerAsyncId)]: 8,
     [Symbol(error-emitted)]: false },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/',
     path: '/',
     href: '/',
     _raw: '/' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
        npnProtocol: 'http/1.1',
        alpnProtocol: false,
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 11,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        allowHalfOpen: false,
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        _idleTimeout: 120000,
        _idleNext: [TimersList],
        _idlePrev: [TimersList],
        _idleStart: 13112,
        _destroyed: false,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 75,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 76,
        [Symbol(triggerAsyncId)]: 8,
        [Symbol(error-emitted)]: false },
     connection: 
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'aafl8jubmkwhyga2aate7tlhbrcstxjfog0.jakenesbitt.com',
        npnProtocol: 'http/1.1',
        alpnProtocol: false,
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 11,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        allowHalfOpen: false,
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        _idleTimeout: 120000,
        _idleNext: [TimersList],
        _idlePrev: [TimersList],
        _idleStart: 13112,
        _destroyed: false,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 75,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 76,
        [Symbol(triggerAsyncId)]: 8,
        [Symbol(error-emitted)]: false },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },
  body: 
   { '{\r\n"update_id":10000,\r\n"message":{\r\n  "date":1441645532,\r\n  "chat":{\r\n     "last_name":"Test Lastname",\r\n     "id":1111111,\r\n     "first_name":"Test",\r\n     "username":"Test"\r\n  },\r\n  "message_id":1365,\r\n  "from":{\r\n     "last_name":"Test Lastname",\r\n     "id":1111111,\r\n     "first_name":"Test",\r\n     "username":"Test"\r\n  },\r\n  "text":"/start"\r\n}\r\n}': '' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/', stack: [ [Layer] ], methods: { post: true } } }
[2018-03-30T01:26:26.057] [INFO] normal - No message!
[2018-03-30T01:37:20.426] [INFO] normal - No message!
[2018-03-30T01:48:48.559] [INFO] normal - No message!
[2018-03-30T02:35:32.898] [INFO] normal - No message!
[2018-03-30T02:36:09.386] [INFO] normal - No message!
[2018-03-30T02:37:34.171] [INFO] normal - No message!
[2018-03-30T03:14:28.425] [INFO] normal - No match found!
[2018-03-30T03:18:44.586] [INFO] normal - No match found!
[2018-03-30T03:19:15.869] [INFO] normal - No match found!
[2018-03-30T03:19:15.873] [INFO] normal - No match found!
[2018-03-30T03:19:15.874] [INFO] normal - No match found!
[2018-03-30T03:19:15.875] [INFO] normal - No match found!
[2018-03-30T03:19:15.877] [INFO] normal - No match found!
[2018-03-30T03:19:15.878] [INFO] normal - No match found!
[2018-03-30T03:19:15.879] [INFO] normal - No match found!
[2018-03-30T03:22:51.638] [INFO] normal - No match found!
[2018-03-30T03:22:51.641] [INFO] normal - No match found!
[2018-03-30T03:22:51.643] [INFO] normal - No match found!
[2018-03-30T03:22:51.644] [INFO] normal - No match found!
[2018-03-30T03:22:51.645] [INFO] normal - No match found!
[2018-03-30T03:22:51.646] [INFO] normal - No match found!
[2018-03-30T03:22:51.647] [INFO] normal - No match found!
[2018-03-30T04:00:56.241] [INFO] normal - Forward Message
[2018-03-30T04:02:25.689] [INFO] normal - Forward Message
[2018-03-30T04:02:51.486] [INFO] normal - Forward Message
[2018-03-30T04:02:52.103] [INFO] normal - Message posted
[2018-03-30T04:02:52.104] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:116:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.217] [INFO] normal - Forward Message
[2018-03-30T04:04:33.219] [INFO] normal - Forward Message
[2018-03-30T04:04:33.219] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.220] [INFO] normal - Forward Message
[2018-03-30T04:04:33.788] [INFO] normal - Message posted
[2018-03-30T04:04:33.788] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.814] [INFO] normal - Message posted
[2018-03-30T04:04:33.814] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.834] [INFO] normal - Message posted
[2018-03-30T04:04:33.834] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.852] [INFO] normal - Message posted
[2018-03-30T04:04:33.852] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.874] [INFO] normal - Message posted
[2018-03-30T04:04:33.874] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.897] [INFO] normal - Message posted
[2018-03-30T04:04:33.897] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.914] [INFO] normal - Message posted
[2018-03-30T04:04:33.915] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.943] [INFO] normal - Message posted
[2018-03-30T04:04:33.944] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.971] [INFO] normal - Message posted
[2018-03-30T04:04:33.972] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:33.993] [INFO] normal - Message posted
[2018-03-30T04:04:33.993] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
[2018-03-30T04:04:34.020] [INFO] normal - Message posted
[2018-03-30T04:04:34.020] [INFO] normal - Error : ReferenceError: res is not defined
    at axios.post.then.response (/home/nesbitjj/telegramBot/index.js:118:13)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
